CREATE OR REPLACE PROCEDURE PAYROLL_RUN IS
CURSOR EMPLOYEE_DETAILS IS 
SELECT * FROM EMPLOYEE;
V_BASIC SALARY_COMPONENTS.BASIC%TYPE;
V_DA SALARY_COMPONENTS.BASIC%TYPE;
V_HRA SALARY_COMPONENTS.BASIC%TYPE;
V_TA SALARY_COMPONENTS.BASIC%TYPE;
V_INCENTIVE PROJECT.MONTHLY_INCENTIVE%TYPE;
V_GROSSPAY NUMBER(10);
V_NETPAY NUMBER(10);
V_PF NUMBER(10);
V_LOANS NUMBER(10);
V_WELFARE NUMBER(10);
V_TAX NUMBER(10);
V_VPF NUMBER(10);
V_PENSION NUMBER(10);
VPF_OPTED CHAR(1);
V_SUBSCRIPTION NUMBER(10);
V_INSURANCE NUMBER(10);
V_LOP LEAVES.LOP%TYPE;
V_TEMP EMPLOYEE.EMP_ID%TYPE;
V_CURRENT_BALANCE SOFT_LOANS.CURRENT_BALANCE%TYPE;
V_LOANID SOFT_LOANS.LOAN_ID%TYPE;
V_STATE_PERCENT TAX.STATE_TAX%TYPE;
V_EMP_PERCENT TAX.EMPLOYMENT_TAX%TYPE;
V_MONTH NUMBER(2);
V_YEAR NUMBER(4);
S_MONTH NUMBER(2);
S_YEAR NUMBER(4);

BEGIN
FOR TEMP IN EMPLOYEE_DETAILS
  LOOP
  IF TEMP.EMPLOYMENT_STATUS='ACTIVE' THEN
    SELECT BASIC INTO V_BASIC FROM SALARY_COMPONENTS WHERE STAGE_CODE=TEMP.STAGE_CODE AND DESIGNATION=TEMP.DESIGNATION;
    V_DA:=V_BASIC*0.3;
    V_HRA:=V_BASIC*0.1;
    V_TA:=V_BASIC*0.08;
    SELECT EXTRACT(MONTH FROM SYSDATE),EXTRACT(YEAR FROM SYSDATE) INTO V_MONTH,V_YEAR FROM DUAL;
    SELECT MONTH,YEAR INTO S_MONTH,S_YEAR FROM ADVANCE_LOANS  WHERE EMP_ID=TEMP.EMP_ID AND MONTH=V_MONTH AND YEAR=V_YEAR ;
        IF(SQL%NOTFOUND) THEN
          SELECT SUM(P.MONTHLY_INCENTIVE),E.EMP_ID INTO V_INCENTIVE,V_TEMP 
            FROM PROJECT P, EMPLOYEE E, WORKS_ON P1
              WHERE P.PID=P1.PID AND P1.EMP_ID=E.EMP_ID
                GROUP BY E.EMP_ID;
        END IF;
      V_GROSSPAY:=V_BASIC+V_DA+V_HRA+V_TA;
      SELECT LOP INTO V_LOP FROM LEAVES WHERE EMP_ID=TEMP.EMP_ID;
            IF(V_LOP>0) THEN
                V_GROSSPAY:=(V_GROSSPAY/30)*(30-V_LOP);
            END IF;

      V_PF:=V_BASIC*0.1;
      V_PENSION:=V_PF;

            IF(VPF_OPTED='Y') THEN
                V_VPF:=V_BASIC*0.075;
            ELSE 
                V_VPF:=0;
            END IF;

      UPDATE RETIREMENT_ACCOUNT 
        SET PF_BALANCE=PF_BALANCE+V_PF,VPF_BALANCE=VPF_BALANCE+V_VPF,PENSION_BALANCE=PENSION_BALANCE+V_PENSION 
          WHERE EMP_ID=TEMP.EMP_ID;

      SELECT LOAN_ID,CURRENT_BALANCE,LOAN_AMOUNT INTO V_LOANID,V_CURRENT_BALANCE,V_LOANS 
        FROM SOFT_LOANS 
          WHERE EMP_ID=TEMP.EMP_ID AND CURRENT_BALANCE!=0;

      IF(SQL%FOUND) THEN
        V_LOANS:=V_LOANS/24;
        V_CURRENT_BALANCE:=V_CURRENT_BALANCE-V_LOANS;
        UPDATE SOFT_LOANS SET CURRENT_BALANCE=V_CURRENT_BALANCE WHERE LOAN_ID=V_LOANID;
          IF(V_CURRENT_BALANCE=0) THEN
            UPDATE SOFT_LOANS SET DUE_DATE=SYSDATE WHERE LOAN_ID=V_LOANID;
          END IF;
  END IF;

      SELECT SUM(P.MONTHLY_SUBSCRIPTION),E.EMP_ID INTO V_SUBSCRIPTION,V_TEMP 
        FROM WELFARE_CLUBS P, EMPLOYEE E, MEMBERSHIP P1
          WHERE P.CLUB_ID=P1.CLUB_ID AND P1.EMP_ID=E.EMP_ID
            GROUP BY E.EMP_ID;
      
      SELECT MONTHLY_PREMIUM INTO V_INSURANCE FROM HEALTHCARE_INSURANCE H,EMPLOYEE E 
      WHERE H.PLAN_ID=TEMP.PLAN_ID AND E.EMP_ID=TEMP.EMP_ID;
          IF(SQL%NOTFOUND) THEN
            V_INSURANCE:=0;
          END IF; 

      SELECT T.STATE_TAX, T.EMPLOYMENT_TAX INTO V_STATE_PERCENT,V_EMP_PERCENT 
        FROM TAX T, SALARY_COMPONENTS S, TAX_SLAB T1, HOLIDAY_CALENDAR C, EMPLOYEE E
            WHERE E.STAGE_CODE=S.STAGE_CODE AND E.DESIGNATION=S.DESIGNATION AND T.TAXCODE=T1.TAXCODE 
            AND C.COUNTRY=E.COUNTRY AND E.EMP_ID=TEMP.EMP_ID;

      V_TAX:=(V_STATE_PERCENT/100*V_GROSSPAY)+(V_EMP_PERCENT/100*V_GROSSPAY);

      V_NETPAY:=V_GROSSPAY-V_PF-V_VPF-V_SUBSCRIPTION-V_LOANS-V_TAX-V_INSURANCE;

      IF (V_NETPAY<0) THEN
        V_NETPAY:=0;
      END IF;

      INSERT INTO PAYROLL_PAYMENTS(PAYMENT_REFERNCE,MONTH,YEAR,NETPAY,TAX,GROSSPAY,MODE_PAYMENT,EMP_ID) 
        VALUES(PAYMENT_SEQ.NEXTVAL,V_MONTH,V_YEAR,V_NETPAY,V_TAX,V_GROSSPAY,'ONLINE TRANSFER',TEMP.EMP_ID);
        
 --     ELSE
    --    DBMS_OUTPUT.PUT_LINE('INFO: EMPLOYEE '||TEMP.EMP_ID||' HAS AVAILED SALARY ADVANCE ALREADY. CANNOT RELEASE SALARY');
 --     END IF;
END IF;
END LOOP;
    
COMMIT;
END;

SET SERVEROUTPUT ON;

BEGIN
PAYROLL_RUN();
END;

TRUNCATE TABLE ADVANCE_LOANS;
SELECT * FROM PAYROLL_PAYMENTS;